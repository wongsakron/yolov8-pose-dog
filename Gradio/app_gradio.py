import gradio as gr
from set_modal import infer  # infer ‡∏Ñ‡∏∑‡∏ô (out_img, out_tbl)

with gr.Blocks(title="Dog Pose (Thai Labels) ‚Äì YOLO + Gradio") as app:
    gr.Markdown("## üê∂ Dog Pose Estimation (Thai Labels)\n‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏´‡∏°‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ keypoints ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡πâ‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢")

    history = gr.State([])

    with gr.Row():
        # ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ upload ‡∏ó‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        inp = gr.Image(type="pil", label="‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û", container=True)
        out_img = gr.Image(type="numpy", label="‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå", interactive=False)

    with gr.Row():
        conf = gr.Slider(0.1, 0.95, value=0.5, step=0.05, label="‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ (conf)")
        show_index = gr.Checkbox(value=False, label="‡πÇ‡∏ä‡∏ß‡πå‡πÄ‡∏•‡∏Ç‡∏î‡∏±‡∏ä‡∏ô‡∏µ (0‚Äì25) ‡∏Ç‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏∏‡∏î")

    run_btn = gr.Button("‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢")

    with gr.Row():
        with gr.Column(scale=1):
            pass
        with gr.Column(scale=2):
            with gr.Accordion("üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢", open=False):
                gallery = gr.Gallery(
                    label=None,
                    columns=3,
                    height=200,
                )
        with gr.Column(scale=1):
            pass

    def predict_and_store(image, conf, show_index, hist):
        out_img, _ = infer(image, conf, show_index)
        if out_img is not None:
            hist = (hist or []) + [out_img]
            if len(hist) > 30:
                hist = hist[-30:]
        return out_img, hist, hist

    # 1) ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
    run_btn.click(
        fn=predict_and_store,
        inputs=[inp, conf, show_index, history],
        outputs=[out_img, gallery, history],
    )

    # 2) ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà (‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏ã‡πâ‡∏≥) ‚Üí ‡πÉ‡∏ä‡πâ .upload() ‡πÅ‡∏ó‡∏ô .change()
    inp.upload(
        fn=predict_and_store,
        inputs=[inp, conf, show_index, history],
        outputs=[out_img, gallery, history],
    )

app.queue().launch()
